@page "/"
@using System.Net.Http.Headers
@using Trading.Analytics.Shared
@inject HttpClient Http
@inject Endpoints Endpoints

<h1>Активы</h1>

<SfChart Title="Portfolio Progress">
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime">
    </ChartPrimaryXAxis>
    <ChartLegendSettings Visible="true"> </ChartLegendSettings>
    <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    <ChartSeriesCollection>
        <ChartSeries DataSource="@portfolioSteps" XName="Date" YName="Balance" Width="3" Fill="blue" Type="ChartSeriesType.Line">
            <ChartMarker>
                <ChartDataLabel Visible="true"> </ChartDataLabel>
            </ChartMarker>
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

<SfChart>
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
    </ChartPrimaryXAxis>
    <ChartPrimaryYAxis Title="Cost">
    </ChartPrimaryYAxis>
    <ChartLegendSettings Visible="true"> </ChartLegendSettings>
    <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    <ChartSeriesCollection>
        <ChartSeries Type="ChartSeriesType.Column" DataSource="@assets"
                     XName="Ticker" YName="RubBalance" Name="RUB Balance">
            <ChartMarker>
                <ChartDataLabel Visible="true"> </ChartDataLabel>
            </ChartMarker>
        </ChartSeries>
        <ChartSeries Type="ChartSeriesType.Column" DataSource="@assets"
                     XName="Ticker" YName="RubProfit" Name="RUB Profit">
            <ChartMarker>
                <ChartDataLabel Visible="true"> </ChartDataLabel>
            </ChartMarker>
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

<SfChart>
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
    </ChartPrimaryXAxis>
    <ChartPrimaryYAxis Title="Cost">
    </ChartPrimaryYAxis>
    <ChartLegendSettings Visible="true"> </ChartLegendSettings>
    <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    <ChartSeriesCollection>
        <ChartSeries Type="ChartSeriesType.Column" DataSource="@assets"
                     XName="Ticker" YName="UsdBalance" Name="USD Balance">
            <ChartMarker>
                <ChartDataLabel Visible="true"> </ChartDataLabel>
            </ChartMarker>
        </ChartSeries>
        <ChartSeries Type="ChartSeriesType.Column" DataSource="@assets"
                     XName="Ticker" YName="UsdProfit" Name="USD Profit">
            <ChartMarker>
                <ChartDataLabel Visible="true"> </ChartDataLabel>
            </ChartMarker>
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

<SfChart Title="Portfolio Progress">
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime">
    </ChartPrimaryXAxis>
    <ChartSeriesCollection>
        <ChartSeries Type="ChartSeriesType.Column" DataSource="@operations" Fill="green" XName="Date" YName="Payment">
            <ChartMarker>
                <ChartDataLabel Visible="true" Name="Currency"> </ChartDataLabel>
            </ChartMarker>
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

@code {

    private IEnumerable<PortfolioStep> portfolioSteps;
    private IEnumerable<Analytics.Shared.Models.Operations.Operation> operations;
    private IEnumerable<Asset> assets;

    protected override async Task OnInitializedAsync()
    {
        assets = await Http.GetJsonAsync<IEnumerable<Asset>>("api/Positions");
        var enumerable = assets.ToList();
        var o = await Http.GetJsonAsync<IEnumerable<Analytics.Shared.Models.Operations.Operation>>("api/Operations");
        operations = o.Where(operation => operation.OperationType.Equals("PayIn") && operation.Status.Equals("Done"));
        var httpClient = new HttpClient {BaseAddress = new Uri(Endpoints.MonitoringBaseUri)};
        portfolioSteps = await httpClient.GetJsonAsync<IEnumerable<PortfolioStep>>("api/PortfolioSteps");
    }

}